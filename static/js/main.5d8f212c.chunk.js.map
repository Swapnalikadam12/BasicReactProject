{"version":3,"sources":["components/Advice.js","App.js","reportWebVitals.js","index.js"],"names":["Advice","useState","advice","setAdvice","fetchAdvice","axios","get","then","response","data","slip","catch","error","console","log","useEffect","className","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAGe,SAASA,IACpB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEMC,EAAc,WAChBC,IAAMC,IAAI,qCACLC,MAAK,SAACC,GACHL,EAAUK,EAASC,KAAKC,KAAKR,WAEhCS,OAAM,SAACC,GACJC,QAAQC,IAAIF,OASxB,OALAG,qBAAU,WACNX,MAED,IAGC,qBAAKY,UAAU,MAAf,SACI,sBAAKA,UAAU,OAAf,UACK,oBAAIA,UAAU,UAAd,SAAyBd,IACzB,wBAAQc,UAAU,SAASC,QAAWb,EAAtC,SACI,yDClBNc,MANf,WACE,OACI,cAAClB,EAAD,KCQSmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5d8f212c.chunk.js","sourcesContent":["import {React, useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\nexport default function Advice() {\r\n    const [advice, setAdvice] = useState('');\r\n\r\n    const fetchAdvice = () => {\r\n        axios.get('https://api.adviceslip.com/advice')\r\n            .then((response) => {\r\n                setAdvice(response.data.slip.advice);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAdvice();\r\n         //eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"card\">\r\n                 <h2 className=\"heading\">{advice}</h2>\r\n                 <button className=\"button\" onClick = {fetchAdvice}>\r\n                     <span>Give Me Advice</span>\r\n                 </button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n","import Advice from '../src/components/Advice';\n\nfunction App() {\n  return (  \n      <Advice/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../src/styles/styles.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}